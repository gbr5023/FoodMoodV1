/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CrudUserProfileView;

import CrudUserProfileController.UserProfileController;
import CrudUserProfileModel.User;
import java.awt.AlphaComposite;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.MediaTracker;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;

/**
 *
 * @author michaelcavallaro
 */
public class UserProfileView extends javax.swing.JFrame {

    private UserProfileController theUserProfileController;
    private String imagePath;
    private ImageIcon profilePicIcon = new ImageIcon(createResizedCopy(Toolkit.getDefaultToolkit().createImage("resources/default-profile.png"),200,200,true));;
    public UserProfileView(UserProfileController parentUserProfileController) 
    {
        this.theUserProfileController = parentUserProfileController;
        imagePath = theUserProfileController.getCurrentUser().getProfilePicPath();
        if(!(imagePath.contains("default-profile") && !imagePath.contains("@"))) {
            updateImageIcon();
        }
        initComponents();
        this.setResizable(false);
        this.setSize(new Dimension(411, 383));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        infoLabel = new javax.swing.JLabel();
        changePictureButton = new javax.swing.JButton();
        imageLabel = new JLabel(profilePicIcon);
        homeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        infoLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        changePictureButton.setText("Change");
        changePictureButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        changePictureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePictureButtonActionPerformed(evt);
            }
        });

        imageLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabelMouseClicked(evt);
            }
        });

        homeButton.setText("Menu");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(247, 247, 247)
                .addComponent(infoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(changePictureButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(homeButton)
                        .addGap(18, 18, 18)
                        .addComponent(imageLabel)))
                .addGap(111, 111, 111))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(homeButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addComponent(changePictureButton)
                .addGap(18, 18, 18)
                .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changePictureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePictureButtonActionPerformed
        
    }//GEN-LAST:event_changePictureButtonActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.theUserProfileController.requestNavigationView();
    }//GEN-LAST:event_homeButtonActionPerformed

    private void imageLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageLabelMouseClicked
        JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(UserProfileView.this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                File file = fc.getSelectedFile();
                Toolkit toolkit = Toolkit.getDefaultToolkit();
                MediaTracker tracker = new MediaTracker(this);
                Image image = toolkit.getImage(file.getAbsolutePath());
                tracker.addImage(image, 0);
                tracker.waitForAll();
                ImageIcon icon = new ImageIcon(createResizedCopy(image,200,200,true));
                
                updateImageIcon();
                saveImage();
            } catch (InterruptedException ex) {
                Logger.getLogger(UserProfileView.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            //log.append("Open command cancelled by user." + newline);
        }
    }//GEN-LAST:event_imageLabelMouseClicked
    BufferedImage createResizedCopy(Image originalImage,  int scaledWidth, int scaledHeight, boolean preserveAlpha) {
        int imageType = preserveAlpha ? BufferedImage.TYPE_INT_RGB : BufferedImage.TYPE_INT_ARGB;
        BufferedImage scaledBI = new BufferedImage(scaledWidth, scaledHeight, imageType);
        Graphics2D g = scaledBI.createGraphics();
        if (preserveAlpha) {
            g.setComposite(AlphaComposite.Src);
        }
        g.drawImage(originalImage, 0, 0, scaledWidth, scaledHeight, null); 
        g.dispose();
        return scaledBI;
    }
    
    public void saveImage() {
        User user = theUserProfileController.getCurrentUser();
        File outputfile = new File("resources/"+theUserProfileController.getCurrentUser().getEmail()+"-profile.png");
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Image image = toolkit.getImage(outputfile.getAbsolutePath());
        theUserProfileController.getCurrentUserList().getUserByEmail(user.getEmail()).setProfilePicPath("resources/"+theUserProfileController.getCurrentUser().getEmail()+"-profile.png");
        theUserProfileController.getCurrentUserList().updateList();
        BufferedImage buff = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_ARGB);

        Graphics2D bGr = buff.createGraphics();
        bGr.drawImage(image, 0, 0, null);
        bGr.dispose();
        try {
            ImageIO.write(buff, "png", outputfile);
        } catch (IOException ex) {
            Logger.getLogger(UserProfileView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void updateImageIcon() {
        profilePicIcon = new ImageIcon(createResizedCopy(Toolkit.getDefaultToolkit().createImage(imagePath),200,200,true));
        imageLabel.setIcon(profilePicIcon);
        this.repaint();
        this.revalidate();
    }
    /**

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserProfileView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserProfileView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserProfileView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserProfileView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new UserProfileView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton changePictureButton;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel infoLabel;
    // End of variables declaration//GEN-END:variables
}
