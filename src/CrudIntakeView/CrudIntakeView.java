/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package CrudIntakeView;

import CrudIntakeController.CrudIntakeController;
//import CrudIntakeModel.CrudIntakeModel;
import CrudIntakeModel.Food;
import CrudIntakeModel.Drink;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Gisward
 */
public class CrudIntakeView extends javax.swing.JFrame 
{
    CrudIntakeController theCrudIntakeController;
    Food f;
    Drink d;
    List<Food> fList = new ArrayList<Food>();
    List<Drink> dList = new ArrayList<Drink>();
  //  CrudIntakeModel cim;
    
    /** 
     * Creates new form CrudIntakeView 
     * @param parentCrudIntakeController the original CrudIntakeController object
     */
    public CrudIntakeView(CrudIntakeController parentCrudIntakeController) 
    {
        this.theCrudIntakeController = parentCrudIntakeController;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        homeButton = new javax.swing.JButton();
        intakeNameTF = new javax.swing.JTextField();
        intakeWeightTF = new javax.swing.JTextField();
        intakeTSCTF = new javax.swing.JTextField();
        intakeName = new javax.swing.JLabel();
        intakeWeight = new javax.swing.JLabel();
        intakeTSC = new javax.swing.JLabel();
        foodButton = new javax.swing.JButton();
        drinkButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        outputLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        homeButton.setText("Menu");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        intakeName.setText("Intake Name");

        intakeWeight.setText("Intake Weight");

        intakeTSC.setText("Time Since Consumption");

        foodButton.setText("Food");
        foodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodButtonActionPerformed(evt);
            }
        });

        drinkButton.setText("Drink");
        drinkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drinkButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter intake details. Then, enter mood details:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(intakeName)
                    .addComponent(intakeWeight)
                    .addComponent(intakeTSC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(intakeTSCTF, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(intakeWeightTF)
                    .addComponent(intakeNameTF))
                .addGap(71, 71, 71))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(homeButton)
                .addGap(18, 18, 18)
                .addComponent(foodButton)
                .addGap(18, 18, 18)
                .addComponent(drinkButton)
                .addGap(82, 82, 82))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(outputLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(intakeName)
                    .addComponent(intakeNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(intakeWeight)
                    .addComponent(intakeWeightTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(intakeTSC)
                    .addComponent(intakeTSCTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foodButton)
                    .addComponent(drinkButton)
                    .addComponent(homeButton))
                .addGap(24, 24, 24)
                .addComponent(outputLabel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Navigates user to the original NavigationView
     * @param evt 
     */
    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.theCrudIntakeController.requestNavigationView();
    }//GEN-LAST:event_homeButtonActionPerformed

    private void foodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodButtonActionPerformed
        // TODO add your handling code here:
        if(!(this.intakeNameTF.getText().isEmpty() || this.intakeWeightTF.getText().isEmpty() || this.intakeTSCTF.getText().isEmpty()))
        {
            boolean weightIsDouble = false;
            try
            {
                Double.parseDouble(this.intakeWeightTF.getText());
                weightIsDouble = true;
                
                if(weightIsDouble)
                {
                    String nameField = intakeNameTF.getText();
                    Double weightField = Double.parseDouble(intakeWeightTF.getText());
                    String tscField = String.valueOf(intakeTSCTF.getText());
                    f = new Food(nameField, weightField, tscField);
                    this.theCrudIntakeController.getListOfFoods().add(f);
                    outputLabel.setForeground(Color.green.darker());
                    outputLabel.setText("Intake added.");
                    intakeNameTF.setText("");
                    intakeWeightTF.setText("");
                    intakeTSCTF.setText("");
                    this.theCrudIntakeController.getCrudMoodController().requestCrudMoodView(nameField);
                }
            }
            catch(NumberFormatException e)
            {
                outputLabel.setForeground(Color.red);
                outputLabel.setText("Enter a number for weight");
                weightIsDouble = false;
            }       
        }
        else
        {
            outputLabel.setForeground(Color.red);
            outputLabel.setText("Please fill all fields.");
        }
    }//GEN-LAST:event_foodButtonActionPerformed

    private void drinkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drinkButtonActionPerformed
        // TODO add your handling code here:
        if(!(this.intakeNameTF.getText().isEmpty() || this.intakeWeightTF.getText().isEmpty() || this.intakeTSCTF.getText().isEmpty()))
        {
            boolean weightIsDouble = false;
            try
            {
                Double.parseDouble(this.intakeWeightTF.getText());
                weightIsDouble = true;
                
                if(weightIsDouble)
                {
                    String nameField = intakeNameTF.getText();
                    Double weightField = Double.parseDouble(intakeWeightTF.getText());
                    String tscField = String.valueOf(intakeTSCTF.getText());
                    d = new Drink(nameField, weightField, tscField);
                    this.theCrudIntakeController.getListOfDrinks().add(d);
                    outputLabel.setForeground(Color.green.darker());
                    outputLabel.setText("Intake added.");
                    intakeNameTF.setText("");
                    intakeWeightTF.setText("");
                    intakeTSCTF.setText("");
                    this.theCrudIntakeController.getCrudMoodController().requestCrudMoodView(nameField);
                }
            }
            catch(NumberFormatException e)
            {
                outputLabel.setForeground(Color.red);
                outputLabel.setText("Enter a number for weight");
                weightIsDouble = false;
            }           
        }
        else
        {
            outputLabel.setForeground(Color.red);
            outputLabel.setText("Please fill all fields.");
        }
    }//GEN-LAST:event_drinkButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrudIntakeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrudIntakeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrudIntakeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrudIntakeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() 
            {
                //new CrudIntakeView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton drinkButton;
    private javax.swing.JButton foodButton;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel intakeName;
    private javax.swing.JTextField intakeNameTF;
    private javax.swing.JLabel intakeTSC;
    private javax.swing.JTextField intakeTSCTF;
    private javax.swing.JLabel intakeWeight;
    private javax.swing.JTextField intakeWeightTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel outputLabel;
    // End of variables declaration//GEN-END:variables

}
